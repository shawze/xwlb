#
# 这是项目的主配置文件。
# 请在此处填入您的API密钥和相关ID。
# 布尔值请使用 True / False。
#

[work_wx]
# --- 企业微信应用配置 ---
# 是否启用企业微信推送 (true/false)
enable = true
# 接收消息的成员ID。@all 表示发送给该应用可见范围内的所有人。单个成员请填写其账号，例如 zhangsan
touser =
# 你的企业ID (CorpID)，在“企业微信管理后台 - 我的企业 - 企业信息”中查看
id =
# 你创建的应用ID (AgentId)，在“应用管理 - 自建”中查看
agentid =
# 你创建的应用的密钥 (Secret)，在“应用管理 - 自建”中查看
secret =
# access_token 会由程序自动获取和刷新，无需手动填写或修改此行。
access_token =

[wechat_mp]
# --- 微信公众号配置 ---
# 你的公众号的AppID，在“公众号后台 - 设置与开发 - 基本配置”中查看
appid =
# 你的公众号的AppSecret，同上，请妥善保管
appsecret =

[Credentials]
# 东方财务 token
EASTMONEY_CTOKEN =
EASTMONEY_UTOKEN =
# 雪球 Cookie
XUEQIU_COOKIE =

[gemini]
# --- Google Gemini API 配置 ---
# 你的 Gemini API Key，请前往 Google AI Studio 获取
api_key =

[StageControl]
# --- 主要流程开关 ---
# True: 执行[阶段4]发布到企业微信。False: 跳过企业微信发布。
publish_wechat_work = True
# True: 执行[阶段4]发布到微信公众号。False: 跳过公众号发布。
publish_wechat_mp = True
# True: 执行[阶段4]发布到雪球。False: 跳过雪球发布。
publish_xueqiu = True
# True: 执行[阶段4]发布到东方财富。False: 跳过东方财富发布。
publish_eastmoney = true


[DebugControl]
# --- 调试与缓存控制 ---

# [仅在调试模式下生效] 强制重新获取新闻。
# True: 忽略所有本地缓存，强制执行网络请求获取最新数据。
# False: 如果存在有效缓存，则优先使用缓存。
force_fetch_news = False

# 强制重新获取新闻详细内容。
# True: 忽略缓存中的`contents`，强制重新抓取每条新闻的详细内容。
# False: 如果缓存中存在`contents`，则直接使用。
force_fetch_contents = False

# [仅在调试模式下生效] 强制重新运行AI分析。
# True: 忽略缓存中的AI分析结果，强制重新调用Gemini进行分析。
# False: 如果缓存中存在有效的分析结果，则直接使用，不重新分析。
force_rerun_analysis = False

# [仅在调试模式下生效] 强制重新生成和上传封面。
# True: 忽略已缓存的Media ID和本地封面图片，强制重新生成并上传，以获取新的Media ID。
# False: 优先使用缓存的Media ID，其次是本地符合日期的封面图片。
force_regenerate_cover = False

# [仅在调试模式下生效] 强制发布到企业微信。
# True: 即使数据源于缓存，也强制执行发布操作。
# False: 如果数据源于缓存，则不发布。
force_publish_work = False

# [仅在调试模式下生效] 强制发布到微信公众号。
# True: 即使数据源于缓存，也强制执行发布操作。
# False: 如果数据源于缓存，则不发布。
force_publish_mp = False

# [仅在调试模式下生效] 强制发布到雪球。
# True: 即使数据源于缓存，也强制执行发布操作。
# False: 如果数据源于缓存，则不发布。
force_publish_xueqiu = False

# [仅在调试模式下生效] 强制发布到东方财富。
# True: 即使数据源于缓存，也强制执行发布操作。
# False: 如果数据源于缓存，则不发布。
force_publish_eastmoney = True